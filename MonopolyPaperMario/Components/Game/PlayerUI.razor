@namespace MonopolyPaperMario.Components.Game.PlayerUI
@using MonopolyPaperMario.Components.Stores


<div class="player-ui w-25 d-flex flex-column align-items-center justify-content-center gap-2">
    <div class="previous-plays container d-flex flex-column align-items-center">
        <h2 class="text-center">HISTÓRICO DE JOGADAS</h2>

        <div class="previous-plays-content overflow-auto w-100 container d-flex flex-column justify-content-start">
            <span>m1</span>
            <span>m2</span>
            <span>m3</span>
            <span>m4</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
            <span>m5</span>
        </div>
    </div>
    <div class="player-turn-counter">
        <h2>VEZ DO JOGADOR @(CurrentPlayer + 1)</h2>
    </div>

    <div class="player-bar">
        @for (int i = 0; i < 6; i++)
        {
            <div class="player-bar-character @(CurrentPlayer == i ? "bar-current-player" : "")">
                <img src="@spriteStore.GetSpritePath(i)" />
            </div>
        }
    </div>

    <div class="current-player">
        <img src="@spriteStore.GetSpritePath(CurrentPlayer)"/>
        <div class="current-player-offset"></div>
        <div class="current-player-ui container d-flex flex-column justify-content-center">
            <div class="row m-1 mt-3">
                <h2 class="col-8 p-0">Dinheiro:</h2>
                <h2 class="col-4 p-0 text-md-end">1500★</h2>
            </div>
            <div class="row m-1">
                @if (DiceRolled) {
                    <button class="btn btn-primary col-8"
                            @onclick="() => MockPassarAVez()">
                        Passar a Vez
                    </button>

                    <div class="col-4 d-flex pe-0 justify-content-around">
                        <img class="dice" src="@iconStore.GetIconPath(IconId.Dice0 + Dice1)" />
                        <img class="dice" src="@iconStore.GetIconPath(IconId.Dice0 + Dice2)" />
                    </div>
                } else {
                    <button class="btn btn-primary"
                            @onclick="() => MockRolarDados()">
                        Rolar Dados
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private CharacterSpriteStore spriteStore = CharacterSpriteStore.GetInstance();
    private IconStore iconStore = IconStore.GetInstance();

    private Random random = new Random(); // remover depois

    [Parameter] public int CurrentPlayer { get; set; } = 0;

    [Parameter] public bool DiceRolled { get; set; } = false;
    [Parameter] public int Dice1 { get; set; } = 1;
    [Parameter] public int Dice2 { get; set; } = 1;

    public void MockPassarAVez()
    {
        CurrentPlayer = (CurrentPlayer + 1) % 6;
        DiceRolled = false;
        StateHasChanged();
    }

    public void MockRolarDados()
    {
        Dice1 = random.Next(1, 7);
        Dice2 = random.Next(1, 7);
        DiceRolled = true;
        StateHasChanged();
    }
}
